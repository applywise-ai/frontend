'use client';

import { Geist, Geist_Mono } from "next/font/google";
import { Inter } from "next/font/google";
import "./globals.css";
import Navbar from "./components/Navbar";
import Footer from "./components/Footer";
import DashboardFooter from "./components/DashboardFooter";
import { usePathname } from "next/navigation";
import { useState, useEffect } from "react";
import { isDashboardPage, shouldHideNavbar } from "./utils/navigation";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const inter = Inter({
  subsets: ["latin"],
  variable: "--font-inter",
});

// Metadata must be in a separate file or generated by a server component
// This is a client component, so we can't define metadata here

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const pathname = usePathname();
  const isAuthPage = shouldHideNavbar(pathname);
  const isDashboard = isDashboardPage(pathname);
  const noScrollPage = pathname === '/jobs' || pathname === '/profile';
  const [layoutLoading, setLayoutLoading] = useState(true);

  // Simulate layout loading
  useEffect(() => {
    // Short timeout to simulate initial layout loading
    const timer = setTimeout(() => {
      setLayoutLoading(false);
    }, 300);
    
    return () => clearTimeout(timer);
  }, []);

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${inter.variable} antialiased bg-gray-50 ${noScrollPage ? 'h-screen overflow-hidden' : 'min-h-screen'} flex flex-col`}
      >
        <Navbar isLoading={layoutLoading} />
        <main className={`${isAuthPage ? '' : 'pt-16'} ${noScrollPage ? 'flex-1 overflow-hidden' : 'flex-grow'}`}>
          {children}
        </main>
        {isAuthPage || noScrollPage ? null : isDashboard ? <DashboardFooter /> : <Footer />}
      </body>
    </html>
  );
}
